chrome://net-internals/

http://www.softpanorama.org/Editors/vim.shtml
https://sandilands.info/nsl/LinuxCommandLine.html
https://discourse.osmc.tv/uploads/default/original/2X/2/298f72aef7cb36d04145db30ff38a63644cb1550.jpg



set lhost 192.168.0.111
set ltrac "cd /home/python3/site-packages/trac/"

uname -m
lsb_release -a
df -h
free --human
grep -iRl "your-text-to-find" ./
`cat ${tmpfile} | sort -nr | head -1`

mv  -v ~/Downloads/{.,}* ~/Videos/
mv /project/sraban/{.,}* /project

cp -r ./dir_1/. ./dir_2/
rm -r mydir
rm -rf mydir

ufw allow 'Nginx HTTP'
ufw status


PS1='[$(whoami)@\W]#'
------------------------------------
netstat -tlnp
netstat -tlpn| grep nginx
ss -tlpn| grep nginx
sudo lsof -P -i -n -sTCP:LISTEN

ps -ef | grep mysql
lsof -n | grep 'mysql.*TCP'
telnet localhost 3306


------------------------------------
To Learn from youtube 
groupadd
useradd
chown
chmod
passwd


------------------------------------
sudo cat /etc/group | grep django


chrome://settings/clearBrowserData

htop, atop, iotop



ps aux
ps ax | grep docker 

lscpu

watch "dmesg | tail -20"

cat /var/log/syslog


-------------------------------------
# Check The memory(RAM) usage

watch free --human
free -s 5 --human

# Clean The memory usage in Root

sudo sync; 
echo 1 > /proc/sys/vm/drop_caches
echo 2 > /proc/sys/vm/drop_caches
echo 3 > /proc/sys/vm/drop_caches

-------------------------------------
# Apache SSL integration

#About Windows Command Shortcuts
-------------------------------------
https://docs.microsoft.com/en-us/windows/wsl/install-win10
https://docs.microsoft.com/en-us/windows/terminal/get-started
https://docs.docker.com/docker-for-windows/wsl/

# WSL
$winver
https://docs.microsoft.com/en-us/windows/wsl/install-win10
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart

wsl --install -d <Distribution Name>

wsl --list --verbose
wsl --set-version <distribution name> <versionNumber>

wsl --shutdown

To Install WSL2
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
wsl --set-default-version 2
install ubntu from windows store


Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
Disable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform
Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform

Reading the content like in linux: more, cat, type

powershell -nologo "& "Get-Content -Wait c:\logFile.log -Tail 10"
powershell -nologo "& "Get-Content -Wait %1 -Tail %2"

password for jenkins: a5b191e2a116437d8b1fa8102ad0c7b1

-------------------------------------
# About Linux Trotting of requests




-------------------------------------
# About Linux Supervisor




-------------------------------------
# About Linux Cron Tabs



-------------------------------------
# About Linux Vi Editor
in vi.rc
set nu -------> set number or set nonumber
set ai
set tabstop=4
set ls=2

:se nu
:se nonu
:q!
:wq!
Esc + i
Esc + a ---> append after end of cursor
Esc + A ---> append after end of line
Esc + yy  -----> copy the lines
Esc + dd  ----> delete the lines
Esc + u ----> undo the last changes
Esc + o ---> open a line in new editor
/ = search forwar
? = search backward
:%s/NewWordToReplace/OldWord  -----> single replace
:%s/NewWordToReplace/OldWord/g  -----> all replace
:!pwd ----> view the current path in vi editor
:[from],[to]d ---> ex.{:4,7d} ------- delete the lines from 4 to 7
:1,4s/^/#   ----- comment lines from 1 to 4


-------------------------------------
# Watch / Loop the command
  Ex. Screen capture in interval
  
  Ex. Image capture in interval

  Ex. Cleaning the memory in interval
	  for i in {1..10}; do echo -n "This is a test in loop $i "; date ; sleep 5; done
	  while true; do echo -n "This is a test of while loop";date ; sleep 5; done
	  for i in {1..3}; do echo $i > /proc/sys/vm/drop_caches; sleep 5; done

  Ex. watch free --human
  Ex. while true; do echo 3 > /proc/sys/vm/drop_caches; sleep 5; done
  Ex. while true; do for i in {1..3}; do echo $i > /proc/sys/vm/drop_caches; sleep 30; done; done;



  for i in comp1 comp2; do ng g c "${i}"; done
  for i in {1..50}; do ng g c "page${i}"; done
  
  --- create pages ---
  	ng g m shared
    for i in 1 2 3 4 5
	  do
	  	ng g c "components/comp${i}"
	  	ng g d "directives/dir${i}"
	  	ng g p "pipes/pp${i}"
	  	ng g s "service/srv${i}"
	  	ng g e "enum/enm${i}"
	  	ng g class "class/cls${i}"
	  	..ng g guard "guard/grd${i}"
	  	ng g interface "interface/mdl${i}"
	  	ng g interceptor "interceptor/icpt${i}"
	  	ng g library "library${i}"
	  done

	ng g m frontend
    for i in 1 2 3 4 5
	  do
	  	ng g c "components/users/usr${i}"
	  	ng g c "components/distributor/dst${i}"
	  	ng g d "directives/dir${i}"
	  	ng g p "pipes/pp${i}"
	  	ng g s "service/srv${i}"
	  	ng g e "enum/enm${i}"
	  	ng g class "class/cls${i}"
	  	..ng g guard "guard/grd${i}"
	  	ng g interface "interface/mdl${i}"
	  	ng g interceptor "interceptor/icpt${i}"
	  	ng g library "library${i}"
	  done

	ng g m backend
    for i in 1 2 3 4 5
	  do
	  	ng g c "components/employees/emp${i}"
	  	ng g c "components/admin/adm${i}"
	  	ng g d "directives/dir${i}"
	  	ng g p "pipes/pp${i}"
	  	ng g s "service/srv${i}"
	  	ng g e "enum/enm${i}"
	  	ng g class "class/cls${i}"
	  	..ng g guard "guard/grd${i}"
	  	ng g interface "interface/mdl${i}"
	  	ng g interceptor "interceptor/icpt${i}"
	  	ng g library "library${i}"
	  done

  --- replace content pages ---
    cat 1.txt 2.txt 3.txt > 0.txt
	cat $(find src/app/front/ -name \*.html) > 0.txt
	find src/app/front/ -name \*.html
	##
	for i in $(find src/app/front/ -name \*.html)
	  do
	  	cat template1.component.html >> "${i}"
	  done
  ----
  
# Mass File Operation:
find /project/src/app/front/ -name \*.html -exec sed -i "s/oldText/newText/g" {} \;
find ./ -type f -readable -writable -exec sed -i "s/oldText/newText/g" {} \;
-------------------------------------
# Normal Global variables
watch date
watch uptime
watch free --human
cal
-------------------------------------

-------------------------------------
# Read git Dir
git ls-files > files.db && echo '' > README.md && cat files.db | while read string; do echo "- [$string]($string)" >> README.md; done
: > README.md && ls | while read string; do echo "- [$string]($string)" >> README.md; done

-------------------------------------
sudo tail -f /var/log/apache2/access.log
sudo tail -f /var/log/apache2/error.log
php --info | grep error 



-------------------------------------
cd /var/lib/dpkg/updates
rm -r ./*
-------------------------------------
ps aux | grep docker
ps aux | grep -i apt
sudo killall apt apt-get

-------------------------------------





Running Process in Ubuntu start up
==================================
sudo service docker stop; sudo service mysql stop;  sudo service apache2 stop; sudo service mongod stop; sudo service redis-server stop;




============= Redis Cli======================
$docker-compose exec cachedb sh
$redis-cli
>ping
>exit
>keys *
>keys *horizon*
>get *laravel_horizon:job*
>SET title:1 "The Hobbit"
>SET author:1 "J.R.R. Tolkien"










------------------------------windows bat file -------------------
@echo off
cd "C:\Program Files\Microsoft Officeoot\Office16\"
start EXCEL.EXE


~~~~~~~~~0~~~~~~~~~~~
@echo OFF
FOR %%i IN (1 2 3 4 5) DO (
  ng g c "components/comp%%i%"
  ng g d "directives/dir%%i%"
  ng g p "pipes/pp%%i%"
  ng g s "service/srv%%i%"
  ng g e "enum/enm%%i%"
  ng g class "class/cls%%i%"
  ng g guard "guard/grd%%i%"
  ng g interface "interface/mdl%%i%"
  ng g interceptor "interceptor/icpt%%i%"
  ng g library "library%%i%"
)
PAUSE


~~~~~~~~~1~~~~~~~~~~~
@ECHO OFF 
:: This batch file details Windows 10, hardware, and networking configuration.
TITLE My System Info
ECHO Please wait... Checking system information.
:: Section 1: Windows 10 information
ECHO ==========================
ECHO WINDOWS INFO
ECHO ============================
systeminfo | findstr /c:"OS Name"
systeminfo | findstr /c:"OS Version"
systeminfo | findstr /c:"System Type"
:: Section 2: Hardware information.
ECHO ============================
ECHO HARDWARE INFO
ECHO ============================
systeminfo | findstr /c:"Total Physical Memory"
wmic cpu get name
wmic diskdrive get name,model,size
wmic path win32_videocontroller get name
:: Section 3: Networking information.
ECHO ============================
ECHO NETWORK INFO
ECHO ============================
ipconfig | findstr IPv4
ipconfig | findstr IPv6
START https://support.microsoft.com/en-us/windows/windows-10-system-requirements-6d4e9a79-66bf-7950-467c-795cf0386715
PAUSE

~~~~~~~2~~~~~~~~~~~
