https://github.com/skewcode/webinars/blob/master/18-javascript-tricky-questions/code/07-closures/questions.md
https://www.toptal.com/javascript/interview-questions
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Q. isInteger Debug

function isInteger(x) { return (x ^ 0) === x; } 
var x = '11111';
console.log("%=", x % 1);
console.log("^=", x ^ 0 );
console.log("Math.round(x) === x",   Math.round(x), Math.round(x) === x);
console.log( " parseInt(x, 10) === x ", parseInt(x, 10), parseInt(x, 10) === x );


String(1000000000000000000000)
parseInt(1000000000000000000000, 8)
parseInt(1000000000000000000000, 10) === 1000000000000000000000


=======================================================================
Q. closures

var b = 1;
function outer(){
   	var b = 2
    function inner(){
        b++;
        var b = 3;
        console.log(b)
    }
    inner();
}
outer();
-----------------
function inner () {
    var b; // b is undefined
    b++; // b is NaN
    b = 3; // b is 3
    console.log(b); // output "3"
}
--------------------
for (var i = 0; i < 5; i++) {
	setTimeout(function() { console.log(i); }, i * 1000 );
}
--------------------
for (var i = 0; i < 5; i++) {
    (function(x) {
        setTimeout(function() { console.log(x); }, x * 1000 );
    })(i);
}
--------------------
for (let i = 0; i < 5; i++) {
	setTimeout(function() { console.log(i); }, i * 1000 );
}
--------------------

--------------------
--------------------
--------------------

=======================================================================
Q. NaN

"abc" / 4    // NaN
console.log(typeof NaN === "number"); // true
console.log(NaN === NaN);  // logs "false"
isNaN(12323)
Number.isNaN(12323) 

=======================================================================
Q. typeof test undefined and NULL

console.log(typeof typeof 1);
typeof null  // object

typeof undefined == typeof NULL
typeof NULL
typeof undefined
typeof 'undefined' // String


=======================================================================
Q. Empty in array

var a = [1, 2, 3];

a[10] = 99;

console.log(a[6]);

var b = [undefined];
b[2] = 1;
console.log(b);             // (3) [undefined, empty × 1, 1]
console.log(b.map(e => 7)); // (3) [7,         empty × 1, 7]

=======================================================================
Q. push / unshift

var myArray = ['a', 'b', 'c', 'd'];
myArray.push('end');
myArray.unshift('start');
console.log(myArray); // ["start", "a", "b", "c", "d", "end"]
-----------------------
myArray = ['start', ...myArray];
myArray = [...myArray, 'end'];
console.log(myArray);
-----------------------
myArray = ['start', ...myArray, 'end'];
-----------------------
-----------------------


=======================================================================
Q. multiple operator

console.log(1 < 2 < 3);
console.log(3 > 2 > 1);

=======================================================================
Q. Scope variable

var x = 21;
var girl = function () {
    console.log(x);
    var x = 20;
};
var boy = girl;
girl();
-----------------------
var x = 21;
var girl = function () {
    console.log(this.x);
    var x = 20;
};
var boy = girl;
girl();
-----------------------
(function () {
    try {
        throw new Error();
    } catch (x) {
        var x = 1, y = 2;
        console.log(x); // 1
    }
    console.log(x); // undefined
    console.log(y); // 2
})();
-----------------------
var length = 10;
function fn() {
	console.log(this.length);
}

var obj = {
  length: 5,
  method: function(fn) {
    fn();
    arguments[0]();
  }
};

obj.method(fn, 1);
-----------------------
var hero = {
    _name: 'John Doe',
    getSecretIdentity: function (){
        return this._name;
    }
};

var stoleSecretIdentity = hero.getSecretIdentity;

console.log(stoleSecretIdentity()); // undefined
console.log(hero.getSecretIdentity()); // John Doe
-----------------------
(function(x) {
    return (function(y) {
        console.log(x);
    })(2)
})(1);
-----------------------
var globalVar = "xyz";

(function outerFunc(outerArg) {
    var outerVar = 'a';
    
    (function innerFunc(innerArg) {
    var innerVar = 'b';
    
    console.log(
        "outerArg = " + outerArg + "\n" +
        "innerArg = " + innerArg + "\n" +
        "outerVar = " + outerVar + "\n" +
        "innerVar = " + innerVar + "\n" +
        "globalVar = " + globalVar);
    
    })(456);
})(123);
-------------------------

=======================================================================
Q. DFS - Traverse each node in DOm

function Traverse(p_element,p_callback) {
   p_callback(p_element);
   var list = p_element.children;
   for (var i = 0; i < list.length; i++) {
       Traverse(list[i],p_callback);  // recursive call
   }
}


=======================================================================
Q. Factorial Recursions
	
	(function fact(n){
	    console.log(`stack => fact(${n}) = ((${n} > 1) ? ${n} * fact(${n}-1) : ${n})`);
	    return ((n > 1) ? n * fact(n-1) : n)
	})(10)

=======================================================================
Q. 

var a={},
    b={key:'b'},
    c={key:'c'};

a[b]=123;
a[c]=456;

console.log(a[b]);

=======================================================================
Q.  false / 0
console.log(false == '0')
console.log(false === '0')

=======================================================================
Q. || / &&

console.log("0 || 1 = "+(0 || 1));
console.log("1 || 2 = "+(1 || 2));
console.log("0 && 1 = "+(0 && 1));
console.log("1 && 2 = "+(1 && 2));

=======================================================================
Q. Stack overflow due to infanite recursive

var list = readHugeList();

var nextListItem = function() {
    var item = list.pop();

    if (item) {
        // process the list item...
        nextListItem(); // Add to Call Stack
    }
};
-------------------------------
sol:

var list = readHugeList();
var nextListItem = function() {
    var item = list.pop();

    if (item) {
        // process the list item...
        setTimeout( nextListItem, 0); // Add to call back Queue
    }
};


=======================================================================
Q. + / -

nsole.log(1 +  "2" + "2"); //--- 122
console.log(1 +  +"2" + "2"); //--- 32
console.log(1 +  -"1" + "2"); //---- 02
console.log(+"1" +  "1" + "2"); //---- 112
console.log( "A" - "B" + "2"); //----- NaN2
console.log( "A" - "B" + 2); //---- NaN

=======================================================================
Q. slice(), splice(), reverse(), concat()

var arr1 = "john".split('');
var arr2 = arr1.reverse();
var arr3 = "jones".split('');
arr2.push(arr3);
console.log("array 1: length=" + arr1.length + " last=" + arr1.slice(-1));
console.log("array 2: length=" + arr2.length + " last=" + arr2.slice(-1


=======================================================================
Q. Object key change

var d = {};

[ 'zebra', 'horse' ].forEach(function(k) {
	d[k] = undefined;
});

console.log(d);

=======================================================================
Q. Create Button dynamically and listen it
   createElement / createTextNode / addEventListener / appendChild 


for (var i = 0; i < 5; i++) {
  var btn = document.createElement('button');
  btn.appendChild(document.createTextNode('Button ' + i));
  btn.addEventListener('click', function(){ console.log(i); });
  document.body.appendChild(btn);
}
Ans: Does not work
------------------------
for (var i = 0; i < 5; i++) {
  var btn = document.createElement('button');
  btn.appendChild(document.createTextNode('Button ' + i));
  btn.addEventListener('click', (function(i) {
    return function() { console.log(i); };
  })(i));
  document.body.appendChild(btn);
}
Ans: newly created function
---------------
for (var i = 0; i < 5; i++) {
  var btn = document.createElement('button');
  btn.appendChild(document.createTextNode('Button ' + i));
  (function (i) {
    btn.addEventListener('click', function() { console.log(i); });
  })(i);
  document.body.appendChild(btn);
}
Ans: By IIFE
---------------
for (let i = 0; i < 5; i++) {
  var btn = document.createElement('button');
  btn.appendChild(document.createTextNode('Button ' + i));
  btn.addEventListener('click', function(){ console.log(i); });
  document.body.appendChild(btn);
}
Ans: By Let in for loop scope
---------------
['a', 'b', 'c', 'd', 'e'].forEach(function (value, i) {
  var btn = document.createElement('button');
  btn.appendChild(document.createTextNode('Button ' + i));
  btn.addEventListener('click', function() { console.log(i); });
  document.body.appendChild(btn);
});
Ans: By ForEach()
---------------

=======================================================================
Q. console.log(sum(2,3));   // Outputs 5
   console.log(sum(2)(3));  // Outputs 5

function sum(x) {
  if (arguments.length == 2) {
    return arguments[0] + arguments[1];
  } else {
    return function(y) { return x + y; };
  }
}


=======================================================================
Q. Pallendrome

function isPalindrome(str) {
  str = str.replace(/\W/g, '').toLowerCase();
  return (str == str.split('').reverse().join(''));
}

console.log(isPalindrome("level"));                   // logs 'true'
console.log(isPalindrome("levels"));                  // logs 'false'
console.log(isPalindrome("A car, a man, a maraca"));  // logs 'true'


=======================================================================
Q. call stack and callback queue

(function() {
    console.log(1); 
    setTimeout(function(){console.log(2)}, 1000); 
    setTimeout(function(){console.log(3)}, 0); 
    console.log(4);
})();

=======================================================================
Q. 
console.log(0.1 + 0.2);
console.log(0.1 + 0.2 == 0.3);

 Numbers in JavaScript are all treated with floating point precision


 Solu:

    function areTheNumbersAlmostEqual(num1, num2) {
		return Math.abs( num1 - num2 ) < Number.EPSILON;
	}
	console.log(areTheNumbersAlmostEqual(0.1 + 0.2, 0.3));

=======================================================================
Q. Does not return same thing

function foo1()
{
  return {
      bar: "hello"
  };
}

function foo2()
{
  return
  {
      bar: "hello"
  };
}

=======================================================================
Q. 

var myObject = {
    foo: "bar",
    func: function() {
        var self = this;
        console.log("outer func:  this.foo = " + this.foo);
        console.log("outer func:  self.foo = " + self.foo);
        (function() {
            console.log("inner func:  this.foo = " + this.foo); // undefined
            console.log("inner func:  self.foo = " + self.foo);
        }());
    }
};
myObject.func();

=======================================================================
Q. 

(function(){
  var a = b = 3;
})();

console.log("a defined? " + (typeof a !== 'undefined')); // undefined
console.log("b defined? " + (typeof b !== 'undefined')); // number


=======================================================================
Q. var bar = null;

console.log(typeof bar === "object");  // logs true!
---------------------
console.log((bar !== null) && (typeof bar === "object"));  // logs false
---------------------
console.log((bar !== null) && ((typeof bar === "object") || (typeof bar === "function")));
---------------------
console.log((bar !== null) && (typeof bar === "object") && (toString.call(bar) !== "[object Array]"));
---------------------
console.log((bar !== null) && (bar.constructor === Object));
---------------------
console.log(Array.isArray(bar));
---------------------

=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 


=======================================================================
Q. 





