Q. Partition, Join, SubQuery(Outer and Inner), Derived Table, Composite Key, Primary Key, rank(), sum(if())

=============================================
Table Structures 

CREATE TABLE `departments`
(
    `dept_no` char(4) NOT NULL,
    `dept_name` varchar(40) NOT NULL,
    `test` enum('','1','2') DEFAULT NULL,
    PRIMARY KEY (`dept_no`),
    UNIQUE KEY `dept_name` (`dept_name`)
);


CREATE TABLE `employee`
(
    `emp_no` int(11) NOT NULL,
    `birth_date` date NOT NULL,
    `first_name` varchar(14) NOT NULL,
    `last_name` varchar(16) NOT NULL,
    `gender` enum('M','F') NOT NULL,
    `hire_date` date NOT NULL,
    `email` varchar(100) DEFAULT NULL,
    `dep_no` char(4) DEFAULT NULL,
    `salary` int(11) DEFAULT NULL,
    PRIMARY KEY (`emp_no`),
    KEY `dep_no` (`dep_no`),
    KEY `idex_name` (`last_name`, `first_name`),
    CONSTRAINT `employee_ibfk_1` FOREIGN KEY (`dep_no`) REFERENCES `departments` (`dept_no`) ON DELETE CASCADE ON UPDATE CASCADE
);

---------------------------------
select dept_no, dept_name from departments
select emp_no,dept_no,first_name,gender, salary from employee

Q1. Highest Salalry and Average Salaray for male and female Employee

Ans. 
select max(salary), avg(salary) from employee;
-- -- --
select max(salary),
       avg(salary),
       (select avg(salary) from employee where gender = 'M') as AvgMale,
       (select avg(salary) from employee where gender = 'F') as AvgFemale,
from employee;
-- -- --
select max(salary),
       avg(salary) 
       (sum(if(gender = 'M', salary, 0)) / sum(if(gender = 'M', 1, 0))) as AvgMale,
       (sum(if(gender = 'F', salary, 0)) / sum(if(gender = 'F', 1, 0))) as AvgFemale
from employee;
-- -- --
-- -- --

Q2. Second Highest Salary From Table

select max(salary) from employee 
where salary not in(
    select max(salary) from employee
);

-- -- --
select salary from employee order by salary desc limit 1,1; second highest
-- -- --
-- -- --

Q2. Nth Highest Salary from employee
-- -- --
select salary from employee order by salary desc limit 9,1; 10th highest subquery

but union all are not possible in limit cases
-- -- --

Q3. Nth Highest Salary from employee without using subquery and limit

set @N = 17
set @rank:=0;

select salary, @rank:=@rank+1 ranking from employee order by salary desc
-- -- --
set @rank:=0;
select salary from (
    select salary, @rank:=@rank+1 ranking from employee order by salary desc
) as rank_sal where ranking = 17;
-- -- --
select salary from (
    select salary, @rank:=@rank+1 ranking from employee, (select @rank:=0) order by salary desc
) as rank_sal where ranking = 17;

-- -- --
N.B
in Mysql8 rank() is available as predefined function

select 
    salary, 
    rank() over (order by salary desc) ranking
from employee 
-- -- --
select salary from (

    select 
        salary, 
        rank() over (order by salary desc) ranking
    from employee 

)  as rank_sal where ranking = 17;

-- -- --
Q4. highest salary, empoyee name, department name

select 
  departments.dept_name,
  employee.emp_name,
  salary,
  rank() over (PARTITION  by dept_no order_by salary desc) ranking
from departments
join employee on (employee.dept_no = departments.dept_no)

-- -- --

select emp_name, dept_name, salary from (

    select 
      departments.dept_name,
      employee.emp_name,
      salary,
      rank() over (PARTITION  by dept_no order_by salary desc) ranking
    from departments
    join employee on (employee.dept_no = departments.dept_no)

)  as rank_sal where ranking = 17;

-- -- --

Q5. highest salary, empoyee name, rank wise department name

    select 
      departments.dept_name,
      employee.emp_name,
      salary,
      dept_no
    from departments
    join employee on (employee.dept_no = departments.dept_no)
    order by dept_no, salary desc



-- -- --

select a.* ,
  
  if(dept_no = @dno, @r:=@r+1, @r:=1) ranking, @dno:=dept_no 

    from (

        select 
          departments.dept_name,
          employee.emp_name,
          salary,
          dept_no
        from departments
        join employee on (employee.dept_no = departments.dept_no)
        order by dept_no, salary desc

    ) as a, (select @dno:='', @r:=0) as b 

-- -- --

select emply_name, dept_name, salary from (

    select a.* ,
      
      if(dept_no = @dno, @r:=@r+1, @r:=1) ranking, @dno:=dept_no 

        from (

            select 
              departments.dept_name,
              employee.emp_name,
              salary,
              dept_no
            from departments
            join employee on (employee.dept_no = departments.dept_no)
            order by dept_no, salary desc

    ) as a, (select @dno:='', @r:=0) as b 

) c where ranking = 1

-- -- --


-- -- --


-- -- --

-- -- --

-- -- --

-- -- --

-- -- --

-- -- --

-- -- --

-- -- --

-- -- --

-- -- --